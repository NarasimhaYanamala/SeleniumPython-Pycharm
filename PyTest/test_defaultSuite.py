# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDefaultSuite():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_sample(self):
    self.driver.get("https://trytestingthis.netlify.app/")
    self.driver.set_window_size(951, 842)
    self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(1)").click()
    assert self.driver.switch_to.alert.text == "Press a button!"
    self.driver.switch_to.alert.accept()
    self.driver.find_element(By.CSS_SELECTOR, ".fakeimg").click()
    self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(13)").click()
    self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(13)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(13)")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    dragged = self.driver.find_element(By.ID, "drag1")
    dropped = self.driver.find_element(By.ID, "div1")
    actions = ActionChains(self.driver)
    actions.drag_and_drop(dragged, dropped).perform()
    self.driver.find_element(By.ID, "uname").click()
    self.driver.find_element(By.ID, "uname").send_keys("test")
    self.driver.find_element(By.ID, "pwd").click()
    self.driver.find_element(By.ID, "pwd").send_keys("test")
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(10)").click()
  
